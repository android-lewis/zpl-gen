name: golang-pipeline
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Run Unit Tests
        run: go test
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Extract Version
        id: version_step
        run: |
          echo "version=${GITHUB_REF$'refs/tags/v'}" >> $GITHUB_OUTPUT
          echo "version_tag=$GITHUB_REPOSITORY:${GITHUB_REF#$'refs/tags/v'}" >> $GITHUB_OUTPUT
          echo "latest_tag=$GITHUB_REPOSITORY:latest" >> $GITHUB_OUTPUT
      - name: Print Version
        run: |
          echo ${{steps.version_step.outputs.version_tag}}
          echo ${{steps.version_step.outputs.latest_tag}}
      - name: Publish Version
        env: 
          GOPROXY: 'proxy.golang.org'
        run: go list -m ${{steps.version_step.outputs.version_tag}}

